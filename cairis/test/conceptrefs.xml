<?xml version="1.0"?>
<!DOCTYPE cairis_model PUBLIC "-//CAIRIS//DTD MODEL 1.0//EN" "http://cairis.org/dtd/cairis_model.dtd">

<cairis_model>
<usability>
<concept_reference name="Acknowledge target device" concept="usecase" object="Installation and update of webinos applications" contributor="Shamal Faily" >
  <excerpt>4. The user is asked whether the application should be made available to all their devices.
5.  The user selects yes and installs the application to his devices.</excerpt>
</concept_reference>

<concept_reference name="API throw errors when access control request denied" concept="requirement" object="Request denial error" contributor="Shamal Faily" >
  <excerpt>webinos APIs shall provide error results when an access control request is denied.</excerpt>
</concept_reference>

<concept_reference name="Applications are up-to-date before execution" concept="usecase" object="Removal of applications" contributor="Shamal Faily" >
  <excerpt>Precondition:  An application is already installed.  This strongly suggests that applications must be installed not only before administration of the app, but before running it.</excerpt>
</concept_reference>

<concept_reference name="Applications launched via events" concept="usecase" object="Background execution" contributor="Shamal Faily" >
  <excerpt>4. The Webinos Runtime informs the User about the occurrence of a certain event that triggers launching an Application.</excerpt>
</concept_reference>

<concept_reference name="Autostart programmatically controlled" concept="requirement" object="Automatic background start-up" contributor="Shamal Faily" >
  <excerpt>It shall be possible to register a background application for automatic execution at device start-up.</excerpt>
</concept_reference>

<concept_reference name="Editors support fine and coarse grained policy editing" concept="requirement" object="Policy view/edit level" contributor="Shamal Faily" >
  <excerpt>Policies shall be viewable and editable by users at both a fine-grained and coarse-grained level.</excerpt>
</concept_reference>

<concept_reference name="Policies contain fine-grained rules" concept="requirement" object="Application identity" contributor="Shamal Faily" >
  <excerpt>webinos shall identify a currently running application.</excerpt>
</concept_reference>

<concept_reference name="Sophisticated policy editing tools" concept="requirement" object="Asset-based policy" contributor="Shamal Faily" >
  <excerpt>The webinos policy editor shall allow asset-based policy specification, including objects, subjects, signing authorities and APIs.</excerpt>
</concept_reference>

<concept_reference name="Policy impact is described textually" concept="requirement" object="Policy impact" contributor="Shamal Faily" >
  <excerpt>The webinos policy editor shall incorporate example textual descriptions of how particular policy changes affect system behaviour.</excerpt>
</concept_reference>

<concept_reference name="webinos explains policy setting refusals" concept="requirement" object="Policy refusal reason" contributor="Shamal Faily" >
  <excerpt>Users shall be presented with a rationale for preventing the modification of some policy settings.</excerpt>
</concept_reference>

<concept_reference name="User alerted on policy warning" concept="requirement" object="Policy refusal reason" contributor="Shamal Faily" >
  <excerpt>The webinos runtime shall be able to alert the user at runtime.</excerpt>
</concept_reference>

<task_characteristic task="Policy conflict" modal_qualifier="Definitely" >
  <definition>Constructs coarse grained policy from fine-grained rules</definition>
  <grounds type="document" reference="Keeps work and personal life separate in her online identities" />
  <grounds type="requirement" reference="Editors support fine and coarse grained policy editing" />
  <grounds type="requirement" reference="Policies contain fine-grained rules" />
  <grounds type="requirement" reference="Sophisticated policy editing tools" />
  <warrant type="document" reference="Has a second privacy policy for not being observable" />
</task_characteristic>

<task_characteristic task="Policy conflict" modal_qualifier="Perhaps" >
  <definition>Builds policies in the office</definition>
  <grounds type="document" reference="Policy decision maker at the e-book store" />
  <grounds type="requirement" reference="Sophisticated policy editing tools" />
</task_characteristic>

<task_characteristic task="Policy conflict" modal_qualifier="Maybe" >
  <definition>Privacy policy betrayed</definition>
  <grounds type="document" reference="Interested in promotions and special deals of her preferred shops" />
  <grounds type="document" reference="Consciously sets privacy settings" />
</task_characteristic>

<task_characteristic task="Policy conflict" modal_qualifier="Possibly" >
  <definition>Policy editing too cumbersome for mobiles</definition>
  <grounds type="requirement" reference="Policies contain fine-grained rules" />
  <grounds type="requirement" reference="Policy impact is described textually" />
  <grounds type="requirement" reference="webinos explains policy setting refusals" />
  <warrant type="requirement" reference="Sophisticated policy editing tools" />
</task_characteristic>

<task_characteristic task="Policy conflict" modal_qualifier="Possibly" >
  <definition>webinos notifies user when out-of-context</definition>
  <grounds type="requirement" reference="User alerted on policy warning" />
  <warrant type="requirement" reference="API throw errors when access control request denied" />
</task_characteristic>

</usability>
</cairis_model>
